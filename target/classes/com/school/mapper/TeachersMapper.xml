<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.school.dao.TeachersMapper">
	<resultMap type="com.school.pojo.Teachers" id="BaseResultMap">
		<id property="tno" column="tno" javaType="int" jdbcType="INTEGER"/>
		<result property="tname" column="tname" javaType="string" jdbcType="VARCHAR"/>
		<result property="tsex" column="tsex" javaType="string" jdbcType="VARCHAR"/>
		<result property="tbirthday" column="tbirthday" javaType="string" jdbcType="VARCHAR"/>
		<association property="departs" javaType="com.school.pojo.Depart">
 				<id property="did" column="did" javaType="int" jdbcType="INTEGER"/> 
 				<result property="dname" column="dname" javaType="string" jdbcType="VARCHAR"/> 
 		</association>
	</resultMap>
	<resultMap type="com.school.pojo.Teachers" id="ClassesResultMap" extends="BaseResultMap">
		<collection property="classes" ofType="com.school.pojo.Classes">
			<id property="id" column="id"/>
			<result property="classname" column="classname"/>
		</collection>
	</resultMap>
	<!-- 获取教师课程 -->
	<select id="getTeacherClasses" resultMap="ClassesResultMap" parameterType="java.lang.Integer">
		select 
			t.tname,c.id,c.classname
		from 
			class c
		inner join 
			teacher_class tc
		on 
			c.id =tc.classid
		inner join 
			teachers t
		on 
			tc.teachertno=t.tno
		where 
			t.tno=#{t.tno,jdbcType=INTEGER}
	
	</select>
	<!-- 获取教工信息 -->
	<select id="getTeachersById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select 
			t.tno,
			t.tname,
			t.tsex,
			t.tbirthday,
			d.dname
		from 
			teachers t
		inner join
			depart d
		on
			t.depart = d.did
		where 
			t.tno=#{t.tno,jdbcType=INTEGER}
	</select>
	<!-- 模糊查询教工 -->
	<select id="getTeachersByKeyword" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT t.tno,t.tname,t.tsex,t.tbirthday,d.dname
		FROM teachers t
		LEFT JOIN depart d
		ON t.depart=d.did
		where t.tname LIKE CONCAT('%',#{keyword},'%')
		or d.dname LIKE CONCAT('%',#{keyword},'%')
	</select>
	<select id="getTeachersList" resultMap="BaseResultMap">
 		select
 			t.tno,
			t.tname,
			t.tsex,
			t.tbirthday,
			d.dname		
 		from 
			teachers t
	    left join
	    	depart d
	    on 
	    	t.depart=d.did
	</select>
	<!--通过部门id获取教师列表-->
	<select id="getTeachersByDepart" resultMap="BaseResultMap" parameterType="java.lang.String">
		select 
			t.tno,t.tname,d.dname
		from 
			teachers t
		LEFT JOIN
			depart d
		ON
			t.depart=d.did
		WHERE 
			d.dname=#{d.dname,jdbcType=INTEGER}
	
	</select>
	<insert id="addTeachers" parameterType="com.school.pojo.Teachers">
		insert into teachers
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="tname !=null">tname,</if>
			<if test="tsex !=null">tsex,</if>
			<if test="tbirthday !=null">tbirthday,</if>
			<if test="depart !=null">depart</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="tname !=null">#{tname,jdbcType=VARCHAR},</if>
			<if test="tsex !=null">#{tsex,jdbcType=VARCHAR},</if>
			<if test="tbirthday !=null">#{tbirthday,jdbcType=VARCHAR},</if>
			<if test="depart!=null">#{depart,jdbcType=INTEGER}</if>
		</trim>
	</insert>
	<delete id="deleteTeachers" parameterType="java.lang.Integer">
		delete from teachers
		where tno=#{tno,jdbcType=INTEGER}
	</delete>
	<update id="updateTeachers" parameterType="com.school.pojo.Teachers">
		update teachers
		<set>
			<if test="tname!=null">
				tname=#{tname,jdbcType=VARCHAR},
			</if>
			<if test="tsex!=null">
				tsex=#{tsex,jdbcType=VARCHAR},
			</if>
			<if test="tbirthday!=null">
				tbirthday=#{tbirthday,jdbcType=VARCHAR},
			</if>
			<if test="depart!=null">
				depart=#{depart,jdbcType=INTEGER}
			</if>
		</set>
		where tno= #{tno,jdbcType=INTEGER}
	</update>
</mapper>
