<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.school.dao.StudentMapper">
	<resultMap type="com.school.pojo.Student" id="BaseResultMap">
		<id property="sid" column="sid" javaType="string" jdbcType="VARCHAR"/>
		<result property="sname" column="sname" javaType="string" jdbcType="VARCHAR"/>
		<result property="ssex" column="ssex" javaType="string" jdbcType="VARCHAR"/>
		<result property="sbirthday" column="sbirthday" javaType="string" jdbcType="VARCHAR"/>
	 	<result property="classid" column="class_id" javaType="int" jdbcType="INTEGER"/> 
		<association property="classes" javaType="Classes">
			<id property="id" column="id" javaType="int" jdbcType="INTEGER"/>
			<result property="classname" column="classname" javaType="string" jdbcType="VARCHAR"/>
		</association>
	</resultMap>
	<resultMap type="com.school.pojo.Student" id="ChargeResultMap" extends="BaseResultMap">
		<collection property="charge" ofType="com.school.pojo.Charge">
			<id property="id" column="id"/>
			<result property="chargeitem" column="chargeitem"/>
			<result property="price" column="price"/>
			<result property="ispay" column="ispay"/>
		</collection>
	</resultMap>
	<sql id="Base_Column_List">
		sid,sname,ssex,sbirthday
	</sql>
	<select id="getChargesBySId" resultMap="ChargeResultMap" parameterType="java.lang.String">
		select
			c.chargeitem,c.price,c.ispay
		from
		 	charge c
		inner join
			student s
		on 
			c.studentid=s.sid
		where s.sid=#{s.sid,jdbcType=VARCHAR}
	</select>
	<select id="getStudentsByClass" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select c.id,s.sid,s.sname
		from student s
		inner join class c
		on s.class_id=c.id
		where c.id=#{c.id,jdbcType=INTEGER}
	</select>
	
	<select id="getStudentById" resultMap="BaseResultMap" parameterType="java.lang.String">
		select 
			student.sid,
			student.sname,
			student.ssex,
			student.sbirthday,
			class.classname
		from 
			student
		inner join
			class
		where 
			student.sid=#{student.sid,jdbcType=VARCHAR}
		and
			student.class_id=class.id
		order by
			student.sid
	</select>
	
	<select id="getStudentList" resultMap="BaseResultMap">
 		select
 			student.sid,
 			student.sname,
 			student.ssex, 
 			student.sbirthday, 
 			class.classname 
 		from
 			student 
 		inner join 
 			class
		where 
 			student.class_id=class.id 
 		order by  
 			student.sid  
	</select>
	<insert id="addStudent" parameterType="com.school.pojo.Student">
		insert into student
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="sid !=null">sid,</if>
			<if test="sname !=null">sname,</if>
			<if test="ssex !=null">ssex,</if>
			<if test="sbirthday !=null">sbirthday,</if>
			<if test="classid !=null">class_id</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="sid !=null">#{sid,jdbcType=VARCHAR},</if>
			<if test="sname !=null">#{sname,jdbcType=VARCHAR},</if>
			<if test="ssex !=null">#{ssex,jdbcType=VARCHAR},</if>
			<if test="sbirthday !=null">#{sbirthday,jdbcType=VARCHAR},</if>
			<if test="classid !=null">#{classid,jdbcType=INTEGER}</if>
		</trim>
	</insert>
	<delete id="deleteStudent" parameterType="java.lang.String">
		delete from student
		where sid=#{sid,jdbcType=VARCHAR}
	</delete>
	<update id="updateStudent" parameterType="com.school.pojo.Student">
		update student
		<set>
			<if test="sname!=null">
				sname=#{sname,jdbcType=VARCHAR},
			</if>
			<if test="ssex!=null">
				ssex=#{ssex,jdbcType=VARCHAR},
			</if>
			<if test="sbirthday!=null">
				sbirthday=#{sbirthday,jdbcType=VARCHAR},
			</if>
			<if test="classid!=null">
				class_id=#{classid,jdbcType=INTEGER}
			</if>
		</set>
		where sid= #{sid,jdbcType=VARCHAR}
	</update>
</mapper>
